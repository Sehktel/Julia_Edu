var documenterSearchIndex = {"docs":
[{"location":"api.html#API-документация","page":"API-документация","title":"API-документация","text":"","category":"section"},{"location":"api.html","page":"API-документация","title":"API-документация","text":"На этой странице представлена автоматически сгенерированная документация на основе документационных строк в исходном коде.","category":"page"},{"location":"api.html#Прямые-методы","page":"API-документация","title":"Прямые методы","text":"","category":"section"},{"location":"api.html","page":"API-документация","title":"API-документация","text":"Modules = [LinearSystems]\nPages = [\"DirectMethods.jl\"]","category":"page"},{"location":"api.html#LinearSystems.solve_cholesky-Tuple{AbstractMatrix, AbstractVector}","page":"API-документация","title":"LinearSystems.solve_cholesky","text":"solve_cholesky(A, b)\n\nРешает систему линейных уравнений Ax = b с использованием разложения Холецкого. Матрица A должна быть симметричной и положительно определенной.\n\nАргументы\n\nA: симметричная положительно определенная матрица коэффициентов\nb: вектор правой части\n\nВозвращает\n\nВектор решения x\n\n\n\n\n\n","category":"method"},{"location":"api.html#LinearSystems.solve_direct-Tuple{AbstractMatrix, AbstractVector}","page":"API-документация","title":"LinearSystems.solve_direct","text":"solve_direct(A, b)\n\nРешает систему линейных уравнений Ax = b с использованием оператора . Это стандартный метод, который выбирает подходящий алгоритм на основе свойств матрицы A.\n\nАргументы\n\nA: матрица коэффициентов\nb: вектор правой части\n\nВозвращает\n\nВектор решения x\n\n\n\n\n\n","category":"method"},{"location":"api.html#LinearSystems.solve_lu-Tuple{AbstractMatrix, AbstractVector}","page":"API-документация","title":"LinearSystems.solve_lu","text":"solve_lu(A, b)\n\nРешает систему линейных уравнений Ax = b с использованием LU-разложения.\n\nАргументы\n\nA: матрица коэффициентов\nb: вектор правой части\n\nВозвращает\n\nВектор решения x\n\n\n\n\n\n","category":"method"},{"location":"api.html#Метод-Гаусса","page":"API-документация","title":"Метод Гаусса","text":"","category":"section"},{"location":"api.html","page":"API-документация","title":"API-документация","text":"Modules = [LinearSystems]\nPages = [\"GaussianElimination.jl\"]","category":"page"},{"location":"api.html#LinearSystems.gauss_elimination-Tuple{AbstractMatrix, AbstractVector}","page":"API-документация","title":"LinearSystems.gauss_elimination","text":"gauss_elimination(A, b)\n\nРешает систему линейных уравнений Ax = b методом Гаусса без выбора главного элемента.\n\nАргументы\n\nA: матрица коэффициентов\nb: вектор правой части\n\nВозвращает\n\nВектор решения x\n\n\n\n\n\n","category":"method"},{"location":"api.html#LinearSystems.gauss_elimination_pivot-Tuple{AbstractMatrix, AbstractVector}","page":"API-документация","title":"LinearSystems.gauss_elimination_pivot","text":"gauss_elimination_pivot(A, b)\n\nРешает систему линейных уравнений Ax = b методом Гаусса с выбором главного элемента по столбцу.\n\nАргументы\n\nA: матрица коэффициентов\nb: вектор правой части\n\nВозвращает\n\nВектор решения x\n\n\n\n\n\n","category":"method"},{"location":"api.html#Метод-прогонки-(алгоритм-Томаса)","page":"API-документация","title":"Метод прогонки (алгоритм Томаса)","text":"","category":"section"},{"location":"api.html","page":"API-документация","title":"API-документация","text":"Modules = [LinearSystems]\nPages = [\"ThomasAlgorithm.jl\"]","category":"page"},{"location":"api.html#LinearSystems.thomas_algorithm-NTuple{4, AbstractVector}","page":"API-документация","title":"LinearSystems.thomas_algorithm","text":"thomas_algorithm(a, b, c, d)\n\nРешает трехдиагональную систему уравнений методом прогонки (алгоритмом Томаса). Система имеет вид:     b₁x₁ + c₁x₂ = d₁     a₂x₁ + b₂x₂ + c₂x₃ = d₂     ...     aₙxₙ₋₁ + bₙxₙ = dₙ\n\nАргументы\n\na: вектор коэффициентов под главной диагональю (a[1] не используется)\nb: вектор коэффициентов на главной диагонали\nc: вектор коэффициентов над главной диагональю (c[n] не используется)\nd: вектор правой части\n\nВозвращает\n\nВектор решения x\n\n\n\n\n\n","category":"method"},{"location":"api.html#LinearSystems.thomas_algorithm-Tuple{AbstractMatrix, AbstractVector}","page":"API-документация","title":"LinearSystems.thomas_algorithm","text":"thomas_algorithm(A, b)\n\nРешает трехдиагональную систему уравнений методом прогонки, принимая матрицу A и вектор b. Матрица A должна быть трехдиагональной.\n\nАргументы\n\nA: трехдиагональная матрица коэффициентов\nb: вектор правой части\n\nВозвращает\n\nВектор решения x\n\n\n\n\n\n","category":"method"},{"location":"api.html#Метод-Гаусса-Зейделя","page":"API-документация","title":"Метод Гаусса-Зейделя","text":"","category":"section"},{"location":"api.html","page":"API-документация","title":"API-документация","text":"Modules = [LinearSystems]\nPages = [\"GaussSeidel.jl\"]","category":"page"},{"location":"api.html#LinearSystems.gauss_seidel","page":"API-документация","title":"LinearSystems.gauss_seidel","text":"gauss_seidel(A, b, x0=zeros(length(b)), tol=1e-6, max_iter=1000)\n\nРешает систему линейных уравнений Ax = b методом Гаусса-Зейделя.\n\nАргументы\n\nA: матрица коэффициентов\nb: вектор правой части\nx0: начальное приближение (по умолчанию нулевой вектор)\ntol: допустимая погрешность для критерия остановки\nmax_iter: максимальное число итераций\n\nВозвращает\n\nВектор решения x\nКоличество выполненных итераций\nВектор невязок на каждой итерации\n\n\n\n\n\n","category":"function"},{"location":"api.html#LinearSystems.gauss_seidel_matrix_form","page":"API-документация","title":"LinearSystems.gauss_seidel_matrix_form","text":"gauss_seidel_matrix_form(A, b, x0=zeros(length(b)), tol=1e-6, max_iter=1000)\n\nРешает систему линейных уравнений Ax = b методом Гаусса-Зейделя в матричной форме. Использует разложение A = L + D + U, где L - нижняя треугольная часть,  D - диагональная часть и U - верхняя треугольная часть.\n\nАргументы\n\nA: матрица коэффициентов\nb: вектор правой части\nx0: начальное приближение (по умолчанию нулевой вектор)\ntol: допустимая погрешность для критерия остановки\nmax_iter: максимальное число итераций\n\nВозвращает\n\nВектор решения x\nКоличество выполненных итераций\nВектор невязок на каждой итерации\n\n\n\n\n\n","category":"function"},{"location":"api.html#LinearSystems.is_diagonally_dominant-Tuple{AbstractMatrix}","page":"API-документация","title":"LinearSystems.is_diagonally_dominant","text":"is_diagonally_dominant(A)\n\nПроверяет, является ли матрица A диагонально доминирующей. Матрица диагонально доминирующая, если для каждой строки модуль диагонального элемента больше или равен сумме модулей остальных элементов строки.\n\nАргументы\n\nA: матрица для проверки\n\nВозвращает\n\ntrue, если матрица диагонально доминирующая, иначе false\n\n\n\n\n\n","category":"method"},{"location":"api.html#Индекс-функций","page":"API-документация","title":"Индекс функций","text":"","category":"section"},{"location":"api.html","page":"API-документация","title":"API-документация","text":"","category":"page"},{"location":"api.html","page":"API-документация","title":"API-документация","text":"","category":"page"},{"location":"gauss_seidel.html#Метод-Гаусса-Зейделя","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"","category":"section"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"Метод Гаусса-Зейделя — это итерационный метод для решения систем линейных алгебраических уравнений. Он относится к классу методов последовательных приближений.","category":"page"},{"location":"gauss_seidel.html#Теоретическое-введение","page":"Метод Гаусса-Зейделя","title":"Теоретическое введение","text":"","category":"section"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"Рассмотрим систему линейных уравнений Ax = b, где A — матрица размера n times n, x — вектор неизвестных, b — вектор правой части.","category":"page"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"Представим матрицу A в виде суммы трех матриц:","category":"page"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"A = L + D + U","category":"page"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"где:","category":"page"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"D\n— диагональная матрица, содержащая диагональные элементы A\nL\n— строго нижняя треугольная матрица (элементы ниже главной диагонали)\nU\n— строго верхняя треугольная матрица (элементы выше главной диагонали)","category":"page"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"Тогда итерационный процесс Гаусса-Зейделя определяется формулой:","category":"page"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"x^(k+1) = (D + L)^-1 (b - U x^(k))","category":"page"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"или в поэлементной форме:","category":"page"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"x_i^(k+1) = frac1a_ii left( b_i - sum_j=1^i-1 a_ij x_j^(k+1) - sum_j=i+1^n a_ij x_j^(k) right)","category":"page"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"где k — номер итерации.","category":"page"},{"location":"gauss_seidel.html#Условия-сходимости","page":"Метод Гаусса-Зейделя","title":"Условия сходимости","text":"","category":"section"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"Метод Гаусса-Зейделя сходится при выполнении одного из следующих условий:","category":"page"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"Матрица A является диагонально доминирующей:\na_ii  sum_j=1 j neq i^n a_ij quad forall i = 1 2 ldots n\nМатрица A является симметричной и положительно определенной.","category":"page"},{"location":"gauss_seidel.html#Реализация-в-Julia","page":"Метод Гаусса-Зейделя","title":"Реализация в Julia","text":"","category":"section"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"В модуле реализованы следующие функции:","category":"page"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"gauss_seidel - основная функция метода Гаусса-Зейделя\ngauss_seidel_matrix_form - вариант метода в матричной форме \nis_diagonally_dominant - проверка диагонального преобладания матрицы","category":"page"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"Подробная документация API доступна в разделе API-документация.","category":"page"},{"location":"gauss_seidel.html#Примеры-использования","page":"Метод Гаусса-Зейделя","title":"Примеры использования","text":"","category":"section"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"# Создаем диагонально доминирующую матрицу\nA = [10.0 -1.0 2.0; -1.0 11.0 -1.0; 2.0 -1.0 10.0]\nb = [6.0, 25.0, -11.0]\n\n# Проверяем, является ли матрица диагонально доминирующей\nprintln(\"Матрица диагонально доминирующая: \", is_diagonally_dominant(A))\n\n# Решаем систему методом Гаусса-Зейделя\nx, iterations, residuals = gauss_seidel(A, b, tol=1e-6, max_iter=100)\n\nprintln(\"Решение: \", x)\nprintln(\"Количество итераций: \", iterations)\nprintln(\"Невязка на последней итерации: \", residuals[end])\n\n# Визуализация сходимости\nusing Plots\nplot(\n    1:iterations, \n    residuals, \n    xlabel=\"Итерация\", \n    ylabel=\"Невязка\", \n    title=\"Сходимость метода Гаусса-Зейделя\",\n    yscale=:log10,\n    legend=false\n)","category":"page"},{"location":"gauss_seidel.html#Вычислительная-сложность","page":"Метод Гаусса-Зейделя","title":"Вычислительная сложность","text":"","category":"section"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"Каждая итерация: O(n^2) операций\nОбщая сложность: O(k cdot n^2), где k — количество итераций","category":"page"},{"location":"gauss_seidel.html#Практические-рекомендации","page":"Метод Гаусса-Зейделя","title":"Практические рекомендации","text":"","category":"section"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"Метод Гаусса-Зейделя особенно эффективен для разреженных систем\nСкорость сходимости зависит от спектральных свойств матрицы и начального приближения\nДля ускорения сходимости можно использовать методы релаксации (метод SOR)\nЕсли матрица не является диагонально доминирующей, метод может не сходиться\nДля улучшения сходимости иногда полезно переупорядочить уравнения системы","category":"page"},{"location":"gauss_seidel.html#Сравнение-с-другими-методами","page":"Метод Гаусса-Зейделя","title":"Сравнение с другими методами","text":"","category":"section"},{"location":"gauss_seidel.html","page":"Метод Гаусса-Зейделя","title":"Метод Гаусса-Зейделя","text":"Метод Преимущества Недостатки\nМетод Гаусса-Зейделя Низкие требования к памяти, простая реализация Условная сходимость, зависимость от порядка уравнений\nМетод Якоби Возможность параллельной реализации Более медленная сходимость по сравнению с Гауссом-Зейделем\nПрямые методы Точное решение за конечное число операций Высокая вычислительная сложность для больших систем","category":"page"},{"location":"thomas_algorithm.html#Метод-прогонки-(алгоритм-Томаса)","page":"Метод прогонки","title":"Метод прогонки (алгоритм Томаса)","text":"","category":"section"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"Метод прогонки (также известный как алгоритм Томаса) – это эффективный алгоритм для решения систем линейных уравнений с трехдиагональной матрицей коэффициентов.","category":"page"},{"location":"thomas_algorithm.html#Теоретическое-введение","page":"Метод прогонки","title":"Теоретическое введение","text":"","category":"section"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"Трехдиагональная система имеет вид:","category":"page"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"beginarrayrcrcrcl\nb_1 x_1 + c_1 x_2 = d_1 \na_2 x_1 + b_2 x_2 + c_2 x_3 = d_2 \n ddots  vdots \na_n x_n-1 + b_n x_n = d_n\nendarray","category":"page"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"или в матричной форме:","category":"page"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"beginpmatrix \nb_1  c_1  0  cdots  0  \na_2  b_2  c_2  cdots  0  \n0  a_3  b_3  cdots  0  \nvdots  vdots  vdots  ddots  vdots  \n0  0  0  a_n  b_n\nendpmatrix\nbeginpmatrix \nx_1  x_2  x_3  vdots  x_n\nendpmatrix = \nbeginpmatrix \nd_1  d_2  d_3  vdots  d_n\nendpmatrix","category":"page"},{"location":"thomas_algorithm.html#Алгоритм","page":"Метод прогонки","title":"Алгоритм","text":"","category":"section"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"Метод прогонки состоит из двух основных этапов:","category":"page"},{"location":"thomas_algorithm.html#Прямой-ход-прогонки","page":"Метод прогонки","title":"Прямой ход прогонки","text":"","category":"section"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"На этом этапе вычисляются коэффициенты прогонки alpha_i и beta_i:","category":"page"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"Начальные значения:\nalpha_1 = fracc_1b_1 quad beta_1 = fracd_1b_1\nДля i = 2 3 ldots n вычисляем:\nalpha_i = fracc_ib_i - a_i alpha_i-1 quad beta_i = fracd_i - a_i beta_i-1b_i - a_i alpha_i-1\nДля последнего уравнения alpha_n не определен, так как c_n не существует.","category":"page"},{"location":"thomas_algorithm.html#Обратный-ход-прогонки","page":"Метод прогонки","title":"Обратный ход прогонки","text":"","category":"section"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"На этом этапе находятся значения неизвестных x_i, начиная с x_n и двигаясь к x_1:","category":"page"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"x_n = beta_n\nДля i = n-1 n-2 ldots 1 вычисляем:\nx_i = beta_i - alpha_i x_i+1","category":"page"},{"location":"thomas_algorithm.html#Вычислительная-сложность","page":"Метод прогонки","title":"Вычислительная сложность","text":"","category":"section"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"Прямой ход: O(n) операций\nОбратный ход: O(n) операций\nОбщая сложность: O(n) операций","category":"page"},{"location":"thomas_algorithm.html#Устойчивость-метода","page":"Метод прогонки","title":"Устойчивость метода","text":"","category":"section"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"Метод прогонки устойчив, если матрица системы является диагонально доминирующей:","category":"page"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"b_1  c_1\nb_i  a_i + c_i для i = 2 3 ldots n-1\nb_n  a_n","category":"page"},{"location":"thomas_algorithm.html#Реализация-в-Julia","page":"Метод прогонки","title":"Реализация в Julia","text":"","category":"section"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"В модуле реализована функция thomas_algorithm, которая предоставляет два интерфейса:","category":"page"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"Работа с отдельными векторами диагоналей a, b, c и вектором правой части d\nРабота с матрицей коэффициентов A и вектором правой части b","category":"page"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"Подробная документация API доступна в разделе API-документация.","category":"page"},{"location":"thomas_algorithm.html#Примеры-использования","page":"Метод прогонки","title":"Примеры использования","text":"","category":"section"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"# Пример решения трехдиагональной системы\n# Система:\n# 2x₁ - x₂ = 1\n# -x₁ + 2x₂ - x₃ = 0\n# -x₂ + 2x₃ = 1\n\n# Определяем коэффициенты\na = [0.0, -1.0, -1.0]  # поддиагональ\nb = [2.0, 2.0, 2.0]    # главная диагональ\nc = [-1.0, -1.0, 0.0]  # наддиагональ\nd = [1.0, 0.0, 1.0]    # правая часть\n\n# Решаем систему методом прогонки\nx = thomas_algorithm(a, b, c, d)\nprintln(\"Решение: x = $x\")\n\n# Или через матрицу\nA = [2.0 -1.0 0.0; -1.0 2.0 -1.0; 0.0 -1.0 2.0]\nb = [1.0, 0.0, 1.0]\n\nx = thomas_algorithm(A, b)\nprintln(\"Решение через матрицу: x = $x\")","category":"page"},{"location":"thomas_algorithm.html#Приложения-метода-прогонки","page":"Метод прогонки","title":"Приложения метода прогонки","text":"","category":"section"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"Метод прогонки часто используется в следующих областях:","category":"page"},{"location":"thomas_algorithm.html","page":"Метод прогонки","title":"Метод прогонки","text":"Численное решение дифференциальных уравнений\nПри дискретизации краевых задач для ОДУ второго порядка часто возникают трехдиагональные системы.\nКубические сплайны\nПри построении интерполяционных кубических сплайнов возникают трехдиагональные системы.\nРешение уравнения теплопроводности\nПри использовании неявных разностных схем для уравнения теплопроводности. ","category":"page"},{"location":"gaussian_elimination.html#Метод-Гаусса","page":"Метод Гаусса","title":"Метод Гаусса","text":"","category":"section"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"Метод Гаусса (метод исключения Гаусса) - это классический алгоритм решения систем линейных уравнений путем последовательного исключения переменных.","category":"page"},{"location":"gaussian_elimination.html#Теоретическое-введение","page":"Метод Гаусса","title":"Теоретическое введение","text":"","category":"section"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"Рассмотрим систему линейных уравнений в матричной форме:","category":"page"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"Ax = b","category":"page"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"где A - матрица коэффициентов размера n times n, x - вектор неизвестных, b - вектор правой части.","category":"page"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"Метод Гаусса состоит из двух основных этапов:","category":"page"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"Прямой ход: Преобразование матрицы A в верхнюю треугольную матрицу.\nОбратный ход: Решение получившейся треугольной системы.","category":"page"},{"location":"gaussian_elimination.html#Прямой-ход","page":"Метод Гаусса","title":"Прямой ход","text":"","category":"section"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"На этом этапе выполняются элементарные преобразования строк матрицы для получения верхней треугольной формы. Для строк с индексами i = 1 2 ldots n-1:","category":"page"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"Если элемент A_ii = 0, находим строку с ненулевым элементом и выполняем перестановку строк (в варианте с выбором главного элемента).\nДля всех строк с индексами j = i+1 ldots n: а. Вычисляем множитель m_ji = A_ji  A_ii б. Вычитаем из строки j строку i, умноженную на m_ji: A_j* = A_j* - m_ji cdot A_i* в. Аналогично для правой части: b_j = b_j - m_ji cdot b_i","category":"page"},{"location":"gaussian_elimination.html#Обратный-ход","page":"Метод Гаусса","title":"Обратный ход","text":"","category":"section"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"После прямого хода система имеет вид:","category":"page"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"beginarrayrcrcrcl\nA_11 x_1 + A_12 x_2 + ldots + A_1n x_n = b_1 \n A_22 x_2 + ldots + A_2n x_n = b_2 \n  ldots  \n   A_nn x_n = b_n \nendarray","category":"page"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"Решение находится обратной подстановкой, начиная с последней переменной:","category":"page"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"x_n = fracb_nA_nn","category":"page"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"x_i = fracb_i - sum_j=i+1^n A_ij x_jA_ii quad i = n-1 ldots 1","category":"page"},{"location":"gaussian_elimination.html#Реализация-в-Julia","page":"Метод Гаусса","title":"Реализация в Julia","text":"","category":"section"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"В модуле реализованы следующие функции:","category":"page"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"gauss_elimination - метод Гаусса без выбора главного элемента\ngauss_elimination_pivot - метод Гаусса с выбором главного элемента","category":"page"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"Подробная документация API доступна в разделе API-документация.","category":"page"},{"location":"gaussian_elimination.html#Примеры-использования","page":"Метод Гаусса","title":"Примеры использования","text":"","category":"section"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"# Создаем тестовую систему\nA = [4.0 1.0 1.0; 1.0 3.0 -1.0; 2.0 -1.0 5.0]\nb = [6.0, 3.0, 7.0]\n\n# Решаем систему методом Гаусса\nx_gauss = gauss_elimination(A, b)\nprintln(\"Решение методом Гаусса: \", x_gauss)\n\n# Решаем систему методом Гаусса с выбором главного элемента\nx_gauss_pivot = gauss_elimination_pivot(A, b)\nprintln(\"Решение методом Гаусса с выбором главного элемента: \", x_gauss_pivot)\n\n# Проверяем точность решения\nprintln(\"Невязка (без выбора главного элемента): \", norm(A * x_gauss - b))\nprintln(\"Невязка (с выбором главного элемента): \", norm(A * x_gauss_pivot - b))","category":"page"},{"location":"gaussian_elimination.html#Вычислительная-сложность","page":"Метод Гаусса","title":"Вычислительная сложность","text":"","category":"section"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"Прямой ход: O(n^3) операций\nОбратный ход: O(n^2) операций\nОбщая сложность: O(n^3) операций","category":"page"},{"location":"gaussian_elimination.html#Устойчивость-метода","page":"Метод Гаусса","title":"Устойчивость метода","text":"","category":"section"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"Метод Гаусса без выбора главного элемента может быть неустойчивым, если на диагонали появляются нулевые или малые по модулю элементы.","category":"page"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"Метод Гаусса с выбором главного элемента значительно улучшает устойчивость, выбирая максимальный по модулю элемент в текущем столбце.","category":"page"},{"location":"gaussian_elimination.html#Практические-рекомендации","page":"Метод Гаусса","title":"Практические рекомендации","text":"","category":"section"},{"location":"gaussian_elimination.html","page":"Метод Гаусса","title":"Метод Гаусса","text":"Для хорошо обусловленных систем используйте простой метод Гаусса\nДля общего случая рекомендуется метод Гаусса с выбором главного элемента\nПри решении систем с плохо обусловленными матрицами используйте метод с выбором главного элемента или более специализированные алгоритмы\nДля систем большой размерности рассмотрите возможность использования разреженных матриц и специализированных методов ","category":"page"},{"location":"manual.html#Руководство-пользователя","page":"Руководство","title":"Руководство пользователя","text":"","category":"section"},{"location":"manual.html#Установка","page":"Руководство","title":"Установка","text":"","category":"section"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"Чтобы установить пакет LinearSystems.jl, выполните следующие команды в Julia REPL:","category":"page"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"using Pkg\nPkg.add(url=\"путь_к_репозиторию\")","category":"page"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"Для использования пакета:","category":"page"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"using LinearSystems","category":"page"},{"location":"manual.html#Запуск-примеров","page":"Руководство","title":"Запуск примеров","text":"","category":"section"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"Вы можете запустить примеры использования каждого метода, выполнив скрипт examples.jl:","category":"page"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"include(\"examples.jl\")","category":"page"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"Для интерактивного исследования методов используйте скрипт run_interactive.jl:","category":"page"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"include(\"run_interactive.jl\")","category":"page"},{"location":"manual.html#Структура-проекта","page":"Руководство","title":"Структура проекта","text":"","category":"section"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"src/ - исходный код пакета\nLinearSystems.jl - основной модуль\nDirectMethods.jl - прямые методы\nGaussianElimination.jl - методы Гаусса\nThomasAlgorithm.jl - метод прогонки\nGaussSeidel.jl - метод Гаусса-Зейделя\ndocs/ - документация\nexamples.jl - примеры использования\nrun_interactive.jl - интерактивное исследование","category":"page"},{"location":"manual.html#Образовательные-материалы","page":"Руководство","title":"Образовательные материалы","text":"","category":"section"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"В директории проекта также доступны подробные документы, описывающие каждый метод решения:","category":"page"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"doc_direct_methods.md - прямые методы\ndoc_gaussian_elimination.md - метод Гаусса\ndoc_thomas_algorithm.md - метод прогонки\ndoc_gauss_seidel.md - метод Гаусса-Зейделя","category":"page"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"Эти документы содержат теоретическое обоснование методов, алгоритмы, особенности реализации на Julia и оценки вычислительной сложности.","category":"page"},{"location":"manual.html#Практические-задания","page":"Руководство","title":"Практические задания","text":"","category":"section"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"Для закрепления материала рекомендуется выполнить следующие задания:","category":"page"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"Модифицируйте метод Гаусса для работы с разреженными матрицами\nРеализуйте метод Гаусса-Зейделя с оптимальным параметром релаксации\nСравните производительность различных методов на больших системах\nИсследуйте устойчивость методов для плохо обусловленных систем","category":"page"},{"location":"manual.html#Дополнительные-ресурсы","page":"Руководство","title":"Дополнительные ресурсы","text":"","category":"section"},{"location":"manual.html#Рекомендуемая-литература","page":"Руководство","title":"Рекомендуемая литература","text":"","category":"section"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"Голуб Дж., Ван Лоун Ч. Матричные вычисления\nСамарский А.А., Николаев Е.С. Методы решения сеточных уравнений\nДеммель Дж. Вычислительная линейная алгебра","category":"page"},{"location":"manual.html#Онлайн-ресурсы","page":"Руководство","title":"Онлайн-ресурсы","text":"","category":"section"},{"location":"manual.html","page":"Руководство","title":"Руководство","text":"Julia Documentation\nLinear Algebra in Julia ","category":"page"},{"location":"index.html#LinearSystems.jl","page":"Главная","title":"LinearSystems.jl","text":"","category":"section"},{"location":"index.html","page":"Главная","title":"Главная","text":"Пакет LinearSystems.jl предоставляет реализацию методов решения систем линейных алгебраических уравнений (СЛАУ) на языке Julia. Проект разработан в образовательных целях для демонстрации различных алгоритмов решения СЛАУ и их особенностей.","category":"page"},{"location":"index.html#Содержание","page":"Главная","title":"Содержание","text":"","category":"section"},{"location":"index.html","page":"Главная","title":"Главная","text":"Пакет включает следующие методы решения СЛАУ:","category":"page"},{"location":"index.html","page":"Главная","title":"Главная","text":"Прямые методы - стандартный метод, LU-разложение, разложение Холецкого\nМетод Гаусса - классический метод с выбором главного элемента и без\nМетод прогонки (алгоритм Томаса) - специализированный метод для трехдиагональных систем\nМетод Гаусса-Зейделя - итерационный метод","category":"page"},{"location":"index.html#Установка","page":"Главная","title":"Установка","text":"","category":"section"},{"location":"index.html","page":"Главная","title":"Главная","text":"using Pkg\nPkg.add(url=\"путь_к_репозиторию\")","category":"page"},{"location":"index.html#Быстрый-старт","page":"Главная","title":"Быстрый старт","text":"","category":"section"},{"location":"index.html","page":"Главная","title":"Главная","text":"using LinearSystems\n\n# Пример использования прямых методов\nA = [4.0 1.0; 1.0 3.0]\nb = [1.0, 2.0]\nx = solve_direct(A, b)\n\n# Пример использования метода Гаусса с выбором главного элемента\nx = gauss_elimination_pivot(A, b)\n\n# Пример решения трехдиагональной системы методом прогонки\nn = 5\nA_tridiag = spdiagm(-1 => -ones(n-1), 0 => 2*ones(n), 1 => -ones(n-1))\nb_tridiag = ones(n)\nx = thomas_algorithm(A_tridiag, b_tridiag)\n\n# Пример использования итерационного метода Гаусса-Зейделя\nx = gauss_seidel(A, b, tol=1e-6, max_iter=100)","category":"page"},{"location":"index.html#Документация","page":"Главная","title":"Документация","text":"","category":"section"},{"location":"index.html","page":"Главная","title":"Главная","text":"Для более подробной информации о методах, пожалуйста, обратитесь к соответствующим разделам документации:","category":"page"},{"location":"index.html","page":"Главная","title":"Главная","text":"Руководство пользователя\nПрямые методы\nМетод Гаусса\nМетод прогонки\nМетод Гаусса-Зейделя\nAPI-документация","category":"page"},{"location":"index.html#Лицензия","page":"Главная","title":"Лицензия","text":"","category":"section"},{"location":"index.html","page":"Главная","title":"Главная","text":"Этот проект распространяется под лицензией MIT. ","category":"page"},{"location":"direct_methods.html#Прямые-методы-решения-СЛАУ","page":"Прямые методы","title":"Прямые методы решения СЛАУ","text":"","category":"section"},{"location":"direct_methods.html","page":"Прямые методы","title":"Прямые методы","text":"Прямые методы позволяют найти точное решение системы линейных алгебраических уравнений за конечное число арифметических операций.","category":"page"},{"location":"direct_methods.html#Теоретическое-введение","page":"Прямые методы","title":"Теоретическое введение","text":"","category":"section"},{"location":"direct_methods.html","page":"Прямые методы","title":"Прямые методы","text":"Для системы линейных уравнений вида:","category":"page"},{"location":"direct_methods.html","page":"Прямые методы","title":"Прямые методы","text":"Ax = b","category":"page"},{"location":"direct_methods.html","page":"Прямые методы","title":"Прямые методы","text":"где A — матрица коэффициентов размера n times n, x — вектор неизвестных, b — вектор правой части, прямые методы дают точное решение.","category":"page"},{"location":"direct_methods.html","page":"Прямые методы","title":"Прямые методы","text":"В проекте реализованы следующие прямые методы:","category":"page"},{"location":"direct_methods.html","page":"Прямые методы","title":"Прямые методы","text":"Стандартный метод — использование встроенного оператора \\ в Julia\nLU-разложение — представление матрицы A в виде произведения A = LU\nРазложение Холецкого — для симметричных положительно определенных матриц","category":"page"},{"location":"direct_methods.html#Реализация-в-Julia","page":"Прямые методы","title":"Реализация в Julia","text":"","category":"section"},{"location":"direct_methods.html","page":"Прямые методы","title":"Прямые методы","text":"В модуле реализованы следующие функции:","category":"page"},{"location":"direct_methods.html","page":"Прямые методы","title":"Прямые методы","text":"solve_direct - стандартный метод, использующий оператор \\\nsolve_lu - метод LU-разложения \nsolve_cholesky - метод разложения Холецкого","category":"page"},{"location":"direct_methods.html","page":"Прямые методы","title":"Прямые методы","text":"Подробная документация API доступна в разделе API-документация.","category":"page"},{"location":"direct_methods.html#Примеры-использования","page":"Прямые методы","title":"Примеры использования","text":"","category":"section"},{"location":"direct_methods.html","page":"Прямые методы","title":"Прямые методы","text":"# Создаем тестовую систему\nA = [4.0 1.0; 1.0 3.0]\nb = [1.0, 2.0]\n\n# Решаем систему разными методами\nx_direct = solve_direct(A, b)    # Стандартный метод\nx_lu = solve_lu(A, b)            # LU-разложение\nx_cholesky = solve_cholesky(A, b) # Разложение Холецкого\n\nprintln(\"Стандартный метод: \", x_direct)\nprintln(\"LU-разложение: \", x_lu)\nprintln(\"Разложение Холецкого: \", x_cholesky)\n\n# Проверяем точность решения\nprintln(\"Невязка (стандартный метод): \", norm(A * x_direct - b))\nprintln(\"Невязка (LU-разложение): \", norm(A * x_lu - b))\nprintln(\"Невязка (разложение Холецкого): \", norm(A * x_cholesky - b))","category":"page"},{"location":"direct_methods.html#Вычислительная-сложность","page":"Прямые методы","title":"Вычислительная сложность","text":"","category":"section"},{"location":"direct_methods.html","page":"Прямые методы","title":"Прямые методы","text":"Метод Вычислительная сложность\nСтандартный метод O(n^3)\nLU-разложение O(n^3) для разложения, O(n^2) для подстановки\nРазложение Холецкого O(n^33) для разложения, O(n^2) для подстановки","category":"page"},{"location":"direct_methods.html#Практические-рекомендации","page":"Прямые методы","title":"Практические рекомендации","text":"","category":"section"},{"location":"direct_methods.html","page":"Прямые методы","title":"Прямые методы","text":"Для общих матриц используйте стандартный метод solve_direct\nДля систем с множеством правых частей выгодно применять LU-разложение\nДля симметричных положительно определенных матриц разложение Холецкого наиболее эффективно\nДля разреженных матриц используйте специализированные методы для разреженных систем ","category":"page"}]
}
